// Code generated by MockGen. DO NOT EDIT.
// Source: duck.go

// Package duck is a generated GoMock package.
package duck

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDuckI is a mock of DuckI interface.
type MockDuckI struct {
	ctrl     *gomock.Controller
	recorder *MockDuckIMockRecorder
}

// MockDuckIMockRecorder is the mock recorder for MockDuckI.
type MockDuckIMockRecorder struct {
	mock *MockDuckI
}

// NewMockDuckI creates a new mock instance.
func NewMockDuckI(ctrl *gomock.Controller) *MockDuckI {
	mock := &MockDuckI{ctrl: ctrl}
	mock.recorder = &MockDuckIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDuckI) EXPECT() *MockDuckIMockRecorder {
	return m.recorder
}

// quack mocks base method.
func (m *MockDuckI) quack() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "quack")
	ret0, _ := ret[0].(string)
	return ret0
}

// quack indicates an expected call of quack.
func (mr *MockDuckIMockRecorder) quack() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "quack", reflect.TypeOf((*MockDuckI)(nil).quack))
}
